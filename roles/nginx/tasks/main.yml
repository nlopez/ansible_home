---
- include_vars: secret.yml
- name: Ensure nginx compilation options dir exists
  file:
    path: /var/db/ports/www_nginx-devel
    state: directory

- name: Configure nginx compilation options
  copy:
    src: options
    dest: /var/db/ports/www_nginx-devel/options
    owner: root
    group: wheel
    mode: 0444

- name: Install nginx mainline from ports
  portinstall: name=nginx-devel state=present use_packages=False

- name: Install dependencies for https://github.com/agoragames/nginx-google-oauth
  pkgng: name=lua51-cjson,lua51-luasec,lua51-luasocket state=present
  when: ansible_os_family == "FreeBSD"

- name: Create nginx log dir
  file: path={{ nginx_log_dir }} state=directory mode=0755 owner={{ nginx_user }} group={{ nginx_group }}

- name: Install trusted certificate bundle
  copy:
    src: "trusted-ssl-bundle.crt"
    dest: "/etc/ssl/trusted-ssl-bundle.crt"
    owner: root
    group: wheel
    mode: 0444

- name: Install nginx static (non-template) config files
  copy:
    src: "{{item}}"
    dest: "{{nginx_conf_root}}/{{item}}"
    owner: root
    group: wheel
    mode: 0444
  with_items:
    - access.lua
    - mime.types

- name: Install main nginx config files
  template:
    src: "{{ item }}.j2"
    dest: "{{ nginx_conf_root }}/{{ item }}"
    owner: www
    group: www
    mode: 0444
  with_items:
    - nginx.conf
    - proxy.conf
    - auth.conf
    - dhparam.pem
  notify: reload nginx

- name: Create nginx virtual hosts directory
  file:
    path: "{{ nginx_conf_root }}/vhosts"
    state: directory

- name: Drop off default server vhost separately
  template: src=vhosts/00-desertbluffs.com.conf.j2 dest={{ nginx_conf_root}}/vhosts/00-desertbluffs.com.conf

- name: Begin list of managed vhosts
  set_fact: managed_vhosts="["{{ nginx_conf_root}}/vhosts/00-desertbluffs.com.conf"]"

- name: Configure static upstream vhosts
  template: src=vhost.conf.j2 dest={{ nginx_conf_root }}/vhosts/{{ item.fqdn }}.conf
  with_items: "{{ proxy_vhosts }}"
  when: "{{ item.upstreams is defined }}"

- name: Add static upstream vhosts to list of managed vhosts
  set_fact: >
    managed_vhosts="{{ managed_vhosts }} + [
    "{{ nginx_conf_root }}/vhosts/{{ item.fqdn }}.conf"
    ]"
  with_items: "{{ proxy_vhosts }}"
  when: "{{ item.upstreams is defined }}"

- name: Configure consul service vhost templates
  template: src=vhost.conf.j2 dest={{ nginx_conf_root }}/vhosts/{{ item.fqdn }}.conf.ctmpl
  with_items: "{{ proxy_vhosts }}"
  when: "{{ item.consul_service is defined }}"

- name: Add consul service vhosts to list of managed vhosts
  set_fact: >
    managed_vhosts="{{ managed_vhosts }} + [
    "{{ nginx_conf_root }}/vhosts/{{ item.fqdn }}.conf",
    "{{ nginx_conf_root }}/vhosts/{{ item.fqdn }}.conf.ctmpl",
    ]"
  with_items: "{{ proxy_vhosts }}"
  when: "{{ item.consul_service is defined }}"

- find: path="{{ nginx_conf_root}}/vhosts" file_type=file
  register: vhosts_files

- name: Remove any unmanaged files from the vhosts dir
  file: state=absent path={{ item.path }}
  with_items: "{{ vhosts_files.files }}"
  when: item.path not in managed_vhosts

- name: Run consul-template
  command: consul-template -config=/usr/local/etc/consul-template.conf -once 

- name: Ensure nginx is started and enabled
  service: name=nginx state=reloaded enabled=yes
