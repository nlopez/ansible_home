#jinja2: lstrip_blocks: True, trim_blocks: True, keep_trailing_newline: True
upstream {{ item.fqdn | regex_replace('\.', '_') }} {
  keepalive 8;
  {% if 'consul_service' in item %}
  {{ "{{" }}range service "{{ item.consul_service }}" "any" {{ "}}" }}
  server {{ "{{" }}.Address{{ "}}" }}:{{ "{{" }}.Port{{ "}}" }};{{ "{{" }}end{{ "}}" }}
  {% else %}
  {% for upstream in item.upstreams %}
  server {{ upstream }};
  {% endfor %}
  {% endif %}
}

server {
  listen 443{{ " http2" if http2 else "" }} ssl;
  listen [::]:443{{ " http2" if http2 else "" }} ssl;
  server_name {{ item.fqdn }};

  ssl_certificate /usr/local/etc/simp_le/output/{{ item.fqdn }}/fullchain.pem;
  ssl_certificate_key /usr/local/etc/simp_le/output/{{ item.fqdn }}/key.pem;
  {% if 'ssl_protocols' in item %}
  ssl_protocols {{ item.ssl_protocols }};
  {% endif %}
  {% if 'ssl_ciphers' in item %}
  ssl_ciphers '{{ item.ssl_ciphers }}';
  {% endif %}

  {% if not 'auth' in item or item.auth %}
  location = /oauth2/auth {
    internal;
    proxy_pass http://192.168.240.136:4180;
  }

  location /oauth2/ {
    proxy_pass http://192.168.240.136:4180;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Scheme $scheme;
  }
  {% endif %}

  location / {
    {% if not 'auth' in item or item.auth %}
    auth_request /oauth2/auth;
    error_page 401 = /oauth2/sign_in;
    {% endif %}
    include proxy.conf;
    proxy_pass {{ 'https' if item.upstream_ssl|default(False) else 'http' }}://{{ item.fqdn | regex_replace('\.', '_') }}{{item.path if 'path' in item else '' }};
    {% include "./vhosts/" + item.fqdn + ".conf.j2" ignore missing %}
  }
}
